// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Grid_View_Task.Entities;

#nullable disable

namespace Grid_View_Task.Context
{
    public partial class PubsContext : DbContext
    {
        public PubsContext()
        {
        }

        public PubsContext(DbContextOptions<PubsContext> options)
            : base(options)
        {
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=Pubs;Integrated Security=True");
            }
        }
        public virtual DbSet<publisher> publishers { get; set; }
        public virtual DbSet<title> titles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<publisher>(entity =>
            {
                entity.HasKey(e => e.pub_id)
                    .HasName("UPKCL_pubind");

                entity.Property(e => e.pub_id)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.city).IsUnicode(false);

                entity.Property(e => e.country)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('USA')");

                entity.Property(e => e.pub_name).IsUnicode(false);

                entity.Property(e => e.state)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<title>(entity =>
            {
                entity.HasKey(e => e.title_id)
                    .HasName("UPKCL_titleidind");

                entity.Property(e => e.title_id).IsUnicode(false);

                entity.Property(e => e.notes).IsUnicode(false);

                entity.Property(e => e.pub_id)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.pubdate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.title1).IsUnicode(false);

                entity.Property(e => e.type)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('UNDECIDED')")
                    .IsFixedLength(true);

                entity.HasOne(d => d.pub)
                    .WithMany(p => p.titles)
                    .HasForeignKey(d => d.pub_id)
                    .HasConstraintName("FK__titles__pub_id__1A14E395");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}